openapi: 3.0.0
info:
  title: Tracky | The Project Tracking System
  description: |
    These API are designed to facilitate the management, monitoring, and feedback collection for student projects. Instructors, teaching assistants (TAs), and students can interact with the system to manage milestones, tasks, submissions, and receive feedback on their work. The system also includes integration with GitHub to track commits and uses Generative AI for document and teams' progress analysis.

    **Key Features**:
    - Milestone and task management with deadlines.
    - Submission tracking and feedback system.
    - GitHub integration for tracking commit histories and Git-related data.
    - AI-driven analysis for teams' progress and document review.
    - Role-based access control for instructors, TAs, and students.
    - Real-time feedback delivery for students based on task submissions.
  version: 1.0.0
servers:
  - url: 'http://localhost:5000'
components:
  securitySchemes:
    authToken:
      type: apiKey
      in: header
      name: Authentication-Token
  responses:
    ForbiddenError:
      description: Forbidden. The user does not have the required role.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code:
                    type: integer
                    example: 403
              response:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - You do not have permission to view this resource.
    GenericError:
      description: Generic error response with customizable examples.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code:
                    type: integer
              response:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
    InternalServerError:
      description: Internal Server Error. Indicates an issue on the server side.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code: 
                    type: integer
                    example: 500
              response:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - An unexpected error occurred. Please try again later.

paths:

  /login:
    post:
      summary: User login endpoint
      description: Authenticates the user and returns authentication token.
      tags:
        - Generic
      parameters:
        - in: query
          name: include_auth_token
          required: true
          schema:
            type: string
            description: Include the authentication token in the response if set to true.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user.
                password:
                  type: string
                  description: The password of the user.
            example:
              username: user1
              password: password123
      responses:
        '200':
          description: Login successful and authentication tokens returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                  response:
                    type: object
                    properties:
                      csrf_token:
                        type: string
                        example: ImFjNjQwNGZlZTI2Mjg3ZWU0ZjVmOGEyODJhY2Y3ZGExMDkzNTg4N2Ui.ZzvI3g.gV2-tZD8QTrWI3RBgY35DjMqD-s
                      user:
                        type: object
                        properties:
                          authentication_token:
                            type: string
                            example: eyJ2ZXIiOiI1IiwidWlkIjoiSkpFa0JuQ242aGdrMXhUMnRRZEFrRHhrQ3NSanNreTIwT3Yxc1djQ0FNRkU1SHJ1UlJqamJja2tJS2lod3NiWCIsImZzX3BhYSI6MTczMTk3MTI5NC42MTMwMTUsImV4cCI6MH0.ZzvI3g.ZzMVJ4XHvuIzFD09FjX0lLblmVg
        '400':
          description: Bad request, user does not exist or invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 400
                  response:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - Specified user does not exist
                      field_errors:
                        type: object
                        properties:
                          username:
                            type: array
                            items:
                              type: string
                            example:
                              - Specified user does not exist
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /user/role:
    get:
      summary: Retrieve user roles
      description: Returns the list of roles assigned to the currently authenticated user.
      tags:
        - Generic
      security:
        - authToken: []
      responses:
        '200':
          description: Roles retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - Instructor
        '401':
          description: Unauthorized - User is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 401
                response:
                  errors:
                    - The server could not verify that you are authorized to access the URL requested. You either supplied the wrong credentials (e.g. a bad password), or your browser doesn''t understand how to supply the credentials required.
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /logout:
    get:
      summary: Logout a user
      description: Logs out the currently authenticated user and invalidates all their authentication tokens.
      tags:
        - Generic
      security:
        - authToken: []
      responses:
        '200':
          description: User logged out successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You have successfully logged out.
        '401':
          description: Unauthorized - User is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 401
                response:
                  errors:
                    - The server could not verify that you are authorized to access the URL requested. You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /teacher/milestone_management:
    get:
      summary: Get all milestones with statistics
      description: Fetches all milestones along with the count of teams, students, and the milestone completion rates for teams supervised by the instructors or TA.
      tags:
        - Teacher_Milestone_Management
      security:
        - authToken: []
      responses:
        '200':
          description: Successfully retrieved milestones and statistics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  no_of_teams:
                    type: integer
                    description: The total number of teams under the instructor or TA.
                    example: 5
                  no_of_students:
                    type: integer
                    description: The total number of students across all teams.
                    example: 30
                  milestones:
                    type: array
                    description: List of milestones with details and completion rates.
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The milestone ID.
                          example: 1
                        title:
                          type: string
                          description: The title of the milestone.
                          example: Project Proposal
                        description:
                          type: string
                          description: Description of the milestone.
                          example: Submit the initial project proposal.
                        deadline:
                          type: string
                          format: date-time
                          description: The deadline for the milestone.
                          example: Sat, 23 Nov 2024 11:46:13 GMT
                        completion_rate:
                          type: number
                          format: float
                          description: Completion percentage of the milestone across teams.
                          example: 80
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a new milestone
      description: Allows instructors to create a new milestone with a set of tasks and a deadline.
      tags:
        - Teacher_Milestone_Management
      security:
        - authToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - deadline
              properties:
                title:
                  type: string
                  description: The title of the milestone.
                  example: Project Proposal
                description:
                  type: string
                  description: A detailed description of the milestone.
                  example: Submit the initial project proposal.
                deadline:
                  type: string
                  format: date-time
                  description: The deadline for the milestone in GMT format.
                  example: Wed, 20 Nov 2024 23:59:59 GMT
                tasks:
                  type: array
                  description: A list of tasks associated with the milestone.
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                        description: The task description.
                        example: Create a draft proposal document.
      responses:
        '201':
          description: Milestone created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Milestone published successfully.
        '400':
          description: Bad request due to validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 400
                response:
                  errors:
                    - Title is required and must be a string.
                    - Deadline must be set to a future date and time.
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  
  /teacher/milestone_management/{milestone_id}:
    get:
      summary: Get milestone details
      description: Retrieve detailed information about a specific milestone, including its tasks.
      tags:
        - Teacher_Milestone_Management
      security:
        - authToken: []
      parameters:
        - name: milestone_id
          in: path
          required: true
          description: The ID of the milestone to retrieve.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Milestone details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    description: The title of the milestone.
                    example: Project Proposal
                  description:
                    type: string
                    description: A detailed description of the milestone.
                    example: Submit the initial project proposal.
                  deadline:
                    type: string
                    format: date-time
                    description: The deadline for the milestone.
                    example: Sat, 23 Nov 2024 11:46:13 GMT
                  tasks:
                    type: array
                    description: List of tasks associated with the milestone.
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                          description: The task description.
                          example: Create a draft proposal document.
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Milestone not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 404
                response:
                  errors:
                    - Milestone not found.
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update milestone details
      description: Modify the details of a specific milestone, including its title, description, deadline, and tasks.
      tags:
        - Teacher_Milestone_Management
      security:
        - authToken: []
      parameters:
        - name: milestone_id
          in: path
          required: true
          description: The ID of the milestone to update.
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The updated title of the milestone.
                  example: Updated Project Proposal
                description:
                  type: string
                  description: The updated description of the milestone.
                  example: Submit the revised project proposal.
                deadline:
                  type: string
                  format: date-time
                  description: The updated deadline in GMT format.
                  example: Thu, 21 Nov 2024 12:00:00 GMT
                tasks:
                  type: array
                  description: The updated list of tasks for the milestone.
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                        description: The task description.
                        example: Finalize the project proposal.
      responses:
        '201':
          description: Milestone updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Milestone updated successfully.
        '400':
          description: Bad request due to validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 400
                response:
                  errors:
                    - Title must be a non-empty string.
                    - Deadline must be set to a future date and time.
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Milestone not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 404
                response:
                  errors:
                    - Milestone not found.
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a milestone
      description: Deletes a milestone identified by its ID.
      tags:
        - Teacher_Milestone_Management
      security:
        - authToken: []
      parameters:
        - name: milestone_id
          in: path
          required: true
          description: The ID of the milestone to delete.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Milestone deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Milestone is deleted
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Milestone not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 404
                response:
                  errors:
                    - Milestone not found.
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /teacher/team_management/overall:
    get:
      summary: Get overall team progress
      description: Retrieves the progress of all teams managed by the current user with AI-driven analysis of their progress.
      tags:
        - Teacher_Team_Management
      security:
        - authToken: []
      responses:
        '200':
          description: A list of teams with their progress details and rankings.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    team_name:
                      type: string
                      description: Name of the team.
                      example: Team A
                    progress:
                      type: integer
                      description: Overall progress percentage.
                      example: 85
                    rank:
                      type: integer
                      description: Rank based on progress and other metrics.
                      example: 2
                    status:
                      type: string
                      enum:
                        - on_track
                        - at_risk
                        - off_track
                      description: Status of the team.
                      example: on_track
                    reason:
                      type: string
                      description: Reason for the assigned rank and status.
                      example: Consistently meeting milestones and submitting tasks on time.
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /teacher/team_management/individual:
    get:
      summary: Get all teams under the user
      description: Retrieves a list of all teams managed by the current user.
      tags:
        - Teacher_Team_Management
      security:
        - authToken: []
      responses:
        '200':
          description: A list of teams managed by the user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  teams:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Team ID.
                          example: 1
                        name:
                          type: string
                          description: Team name.
                          example: Team Alpha
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /teacher/team_management/individual/detail/{team_id}:
    get:
      summary: Get individual team details
      description: Retrieves detailed information about a specific team fetched by ID.
      tags:
        - Teacher_Team_Management
      security:
        - authToken: []
      parameters:
        - name: team_id
          in: path
          required: true
          description: The ID of the team.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Detailed information about the team.
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Team ID.
                        example: 1
                      name:
                        type: string
                        description: Team name.
                        example: Team Alpha
                      members:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Member ID.
                              example: 1
                            name:
                              type: string
                              description: Member username.
                              example: john_doe
                            email:
                              type: string
                              description: Member email address.
                              example: john_doe@example.com
                            github_username:
                              type: string
                              description: Member GitHub username.
                              example: john_doe_github
                      github_repo_url:
                        type: string
                        description: GitHub repository URL of the team.
                        example: https://github.com/TeamAlpha/project-repo
                      instructor:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Instructor ID.
                            example: 1
                          name:
                            type: string
                            description: Instructor username.
                            example: prof_james
                      ta:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Teaching Assistant ID.
                            example: 2
                          name:
                            type: string
                            description: TA username.
                            example: ta_michael
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Team not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 404
                response:
                  errors:
                    - Team not found
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /teacher/team_management/individual/progress/{team_id}:
    get:
      summary: Get progress of a specific team
      description: Retrieves detailed progress for a specific team across all milestones and tasks.
      tags:
        - Teacher_Team_Management
      security:
        - authToken: []
      parameters:
        - name: team_id
          in: path
          required: true
          description: The ID of the team.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Detailed progress of the team across milestones.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Milestone ID.
                      example: 101
                    title:
                      type: string
                      description: Title of the milestone.
                      example: Milestone 1 - Initial Setup
                    description:
                      type: string
                      description: Description of the milestone.
                      example: Complete the initial project setup and environment configuration.
                    deadline:
                      type: string
                      format: date-time
                      description: Deadline of the milestone.
                      example: Sat, 23 Nov 2024 11:46:13 GMT
                    created_at:
                      type: string
                      format: date-time
                      description: Creation time of the milestone.
                      example: Sat, 23 Nov 2024 10:00:00 GMT
                    tasks:
                      type: array
                      items:
                        type: object
                        properties:
                          task_id:
                            type: integer
                            description: Task ID.
                            example: 201
                          description:
                            type: string
                            description: Task description.
                            example: Set up project repository
                          is_completed:
                            type: boolean
                            description: Whether the task is completed.
                            example: true
                          submission_time:
                            type: string
                            format: date-time
                            nullable: true
                            description: Time the task was submitted.
                            example: Sat, 23 Nov 2024 11:00:00 GMT
                          feedback:
                            type: string
                            nullable: true
                            description: Feedback provided for the task.
                            example: Good work, but need to finalize the README.
                          feedback_time:
                            type: string
                            format: date-time
                            nullable: true
                            description: Time the feedback was provided.
                            example: Sat, 23 Nov 2024 12:00:00 GMT
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Team not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 404
                response:
                  errors:
                    - Team not found
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /teacher/team_management/individual/submission/{team_id}/{task_id}:
    get:
      summary: View submission for a specific task and team
      description: Retrieves the document submitted for a specific task by a specific team. Returns the document file if it exists.
      tags:
        - Teacher_Team_Management
      security:
        - authToken: []
      parameters:
        - name: team_id
          in: path
          required: true
          description: The ID of the team.
          schema:
            type: integer
            example: 1
        - name: task_id
          in: path
          required: true
          description: The ID of the task.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved the submission document.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Submission, document, or file not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              examples:
                team_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - Team not found.
                submission_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - Submission or document not found.
                file_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - File not found.
        '500':
          $ref: '#/components/responses/InternalServerError'

  /teacher/team_management/individual/feedback/{team_id}/{task_id}:
    post:
      summary: Provide feedback for a specific task submission
      description: Allows an instructor or TA to provide feedback on a submission for a specific task by a specific team.
      tags:
        - Teacher_Team_Management
      security:
        - authToken: []
      parameters:
        - name: team_id
          in: path
          required: true
          description: The ID of the team.
          schema:
            type: integer
            example: 1
        - name: task_id
          in: path
          required: true
          description: The ID of the task.
          schema:
            type: integer
            example: 1
      requestBody:
        description: Feedback content for the submission.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feedback:
                  type: string
                  description: The feedback content for the task submission.
              required:
                - feedback
              example:
                feedback: Great work! Please revise section 2 for clarity.
      responses:
        '201':
          description: Feedback successfully provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message.
              example:
                message: The feedback is successfully provided.
        '400':
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              examples:
                feedback_missing:
                  value:
                    meta:
                      code: 400
                    response:
                      errors:
                        - Feedback data is required.
                feedback_invalid:
                  value:
                    meta:
                      code: 400
                    response:
                      errors:
                        - Feedback must be a non-empty string.
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Team or submission not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              examples:
                team_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - Team not found.
                submission_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - Submission not found.
        '500':
          $ref: '#/components/responses/InternalServerError'

  /teacher/team_management/individual/github/{team_id}:
    get:
      summary: Retrieve GitHub commit details for a specific team or team member
      description: Fetches GitHub commit details for a team's repository, optionally filtered by a specific team member's GitHub username.
      tags:
        - Teacher_Team_Management
      security:
        - authToken: []
      parameters:
        - name: team_id
          in: path
          required: true
          description: The ID of the team.
          schema:
            type: integer
            example: 1
        - name: user_id
          in: query
          required: false
          description: The ID of the team member to filter GitHub commit details by.
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: GitHub commit details successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The name of the team or the GitHub username of the specific team member.
                  github_repo_url:
                    type: string
                    description: The GitHub repository URL for the team.
                  total_commits:
                    type: integer
                    description: Total number of commits made to the repository.
                  lines_of_code_added:
                    type: integer
                    description: Total lines of code added.
                  lines_of_code_deleted:
                    type: integer
                    description: Total lines of code deleted.
                  milestones:
                    type: array
                    description: Milestone-specific GitHub activity details.
                    items:
                      type: object
                      properties:
                        milestone_id: 
                          type: integer
                          description: Id of the milestone.
                        name:
                          type: string
                          description: Name of the milestone.
                        commits:
                          type: integer
                          description: Number of commits for the milestone.
                        lines_of_code_added:
                          type: integer
                          description: Lines of code added for the milestone.
                        lines_of_code_deleted:
                          type: integer
                          description: Lines of code deleted for the milestone.
              example:
                name: john_doe
                github_repo_url: 'https://github.com/example/repo'
                total_commits: 150
                lines_of_code_added: 1200
                lines_of_code_deleted: 300
                milestones:
                  - milestone_id: 1
                    name: Milestone 1
                    commits: 45
                    lines_of_code_added: 600
                    lines_of_code_deleted: 100
                  - milestone_id: 2
                    name: Milestone 2
                    commits: 105
                    lines_of_code_added: 600
                    lines_of_code_deleted: 200
        '400':
          description: Non-integer user id sent.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 400
                response:
                  errors:
                    - User id must be integer.
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Team, member, or repository not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              examples:
                team_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - Team not found.
                member_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - Team member not found.
                repo_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - No GitHub repository URL found for this team.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          description: Bad gateway. Failed to fetch from Github.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 502
                response:
                  errors:
                    - Empty git respository.
  
  /teacher/team_management/individual/ai_analysis/{team_id}/{task_id}:
    get:
      summary: Perform AI analysis on a team's task submission.
      description: Retrieves a submission document, extracts its content, and performs AI-based analysis to check compliance with task requirements.
      tags:
        - Teacher_Team_Management
      security:
        - authToken: []
      parameters:
        - name: team_id
          in: path
          required: true
          description: ID of the team.
          schema:
            type: integer
            example: 1
        - name: task_id
          in: path
          required: true
          description: ID of the task.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: AI analysis successfully completed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysis:
                    type: string
                    description: AI-generated feedback and analysis of the document.
              example:
                analysis: |
                  **Content Review**:
                  - Grammar: The document is grammatically sound but has occasional awkward phrasing.
                  - Structure: Missing a conclusion section to summarize key points.
                  - Clarity: Some sections are overly technical without sufficient explanation.

                  **Task Requirements Check**:
                  - Met: Introduction and methodology align with the task requirements.
                  - Missing: Analysis section is incomplete. Provide further elaboration on results.
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Team, submission or file not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              examples:
                team_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - Team not found.
                'submission_not_found:':
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - Submission or document not found.
                file_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - File not found.
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /student/notifications:
    get:
      summary: Retrieve notifications for the current student
      description: Returns a list of notifications for the current student, including their title, type, and timestamps.
      tags:
        - Student_Notifications
      security:
        - authToken: []
      responses:
        '200':
          description: Successful response with a list of notifications.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the notification.
                          example: 1
                        title:
                          type: string
                          description: Title of the notification.
                          example: New Milestone Assigned
                        type:
                          type: string
                          description: The type of the notification (e.g., ''Milestone'', ''Reminder'').
                          example: Milestone
                        created_at:
                          type: string
                          format: date-time
                          description: The timestamp when the notification was created.
                          example: Sat, 23 Nov 2024 11:46:13 GMT
                        read_at:
                          type: string
                          format: date-time
                          description: The timestamp when the notification was read (nullable).
                          example: Sat, 23 Nov 2024 11:46:13 GMT
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /student/notifications/{notification_id}:
    get:
      summary: Retrieve details of a specific notification for the current student
      description: Returns the details of a specific notification and marks it as read for the current student.
      tags:
        - Student_Notifications
      security:
        - authToken: []
      parameters:
        - name: notification_id
          in: path
          required: true
          description: The ID of the notification to retrieve.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successful response with the notification details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the notification.
                    example: 1
                  title:
                    type: string
                    description: The title of the notification.
                    example: New Milestone Assigned
                  message:
                    type: string
                    description: Detailed message of the notification.
                    example: You have been assigned a new milestone.
                  type:
                    type: string
                    description: The type of the notification (e.g., ''Milestone'', ''Reminder'').
                    example: Milestone
                  created_at:
                    type: string
                    format: date-time
                    description: The timestamp when the notification was created.
                    example: Sat, 23 Nov 2024 11:46:13 GMT
                  read_at:
                    type: string
                    format: date-time
                    description: The timestamp when the notification was read (nullable).
                    example: Sat, 23 Nov 2024 11:46:13 GMT
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: The requested notification is not found or access is denied, if it is any other user's notification.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 404
                response:
                  errors:
                    - Notification not found or access denied.
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /student/notifications/mark_all_as_read:
    get:
      summary: Mark all unread notifications as read for the current student
      description: Marks all unread notifications for the current student as read.
      tags:
        - Student_Notifications
      security:
        - authToken: []
      responses:
        '200':
          description: Successful response indicating that all notifications have been marked as read.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: All notifications marked as read.
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /student/notifications/preferences:
    get:
      summary: Retrieve notification preferences for the current student
      description: Returns the current notification preferences for the student, such as email and in-app notification settings for deadlines and feedback.
      tags:
        - Student_Notifications
      security:
        - authToken: []
      responses:
        '200':
          description: Successful response with the current notification preferences.
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_deadline_notifications:
                    type: boolean
                    description: Whether the student wants to receive email notifications for deadlines.
                    example: true
                  in_app_deadline_notifications:
                    type: boolean
                    description: Whether the student wants to receive in-app notifications for deadlines.
                    example: false
                  email_feedback_notifications:
                    type: boolean
                    description: Whether the student wants to receive email notifications for feedback.
                    example: true
                  in_app_feedback_notifications:
                    type: boolean
                    description: Whether the student wants to receive in-app notifications for feedback.
                    example: true
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Notification preferences not found for the current student.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 404
                response:
                  errors:
                    - Notification preferences not found.
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update notification preferences for the current student
      description: Updates the student's notification preferences for deadlines and feedback via email or in-app notifications.
      tags:
        - Student_Notifications
      security:
        - authToken: []
      requestBody:
        description: The notification preferences to update for the student.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_deadline_notifications:
                  type: boolean
                  description: Whether the student wants to receive email notifications for deadlines.
                in_app_deadline_notifications:
                  type: boolean
                  description: Whether the student wants to receive in-app notifications for deadlines.
                email_feedback_notifications:
                  type: boolean
                  description: Whether the student wants to receive email notifications for feedback.
                in_app_feedback_notifications:
                  type: boolean
                  description: Whether the student wants to receive in-app notifications for feedback.
            examples:
              example1:
                value:
                  email_deadline_notifications: true
                  in_app_deadline_notifications: false
                  email_feedback_notifications: true
                  in_app_feedback_notifications: true
      responses:
        '201':
          description: Successful response indicating that notification preferences have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Notification preferences updated successfully.
        '400':
          description: Invalid request data, where boolean values were expected for preferences.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 400
                response:
                  errors:
                    - email_deadline_notifications must be a boolean value.
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Notification preferences not found for the current student.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 404
                response:
                  errors:
                    - Notification preferences not found.
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /student/milestone_management/overall:
    get:
      summary: Retrieve overall milestones and completion status for the current student's team
      description: Returns the milestones for the student's team along with their completion percentages based on task submissions.
      security:
        - authToken: []
      tags:
        - Student_Milestone_Info
      responses:
        '200':
          description: Successful response with the team's milestones and their completion percentages.
          content:
            application/json:
              schema:
                type: object
                properties:
                  team_name:
                    type: string
                    description: The name of the team.
                    example: Team Alpha
                  milestones:
                    type: array
                    items:
                      type: object
                      properties:
                        milestone_id:
                          type: integer
                          description: ID of the milestone.
                          example: 1
                        title:
                          type: string
                          description: Title of the milestone.
                          example: Milestone 1
                        completion_percentage:
                          type: number
                          format: float
                          description: Completion percentage of the milestone based on task submissions.
                          example: 80
        '400':
          description: No team is assigned to the current student.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 400
                response:
                  errors:
                    - No team is assigned to you yet.
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /student/milestone_management/individual:
    get:
      summary: Retrieve individual milestones for the current student
      description: Returns a list of all milestones with their titles for the current student.
      tags:
        - Student_Milestone_Info
      security:
        - authToken: []
      responses:
        '200':
          description: Successful response with a list of milestones for the student.
          content:
            application/json:
              schema:
                type: object
                properties:
                  milestones:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: ID of the milestone.
                          example: 1
                        title:
                          type: string
                          description: Title of the milestone.
                          example: Milestone 1
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /student/milestone_management/individual/{milestone_id}:
    get:
      summary: Retrieve detailed information about a specific milestone for the student's team
      description: Returns detailed information about a milestone, including tasks, completion status, feedback, and timestamps.
      security:
        - authToken: []
      tags:
        - Student_Milestone_Info
      parameters:
        - in: path
          name: milestone_id
          required: true
          description: The ID of the milestone to retrieve details for.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successful response with the milestone details, including tasks and submission statuses.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the milestone.
                    example: 1
                  title:
                    type: string
                    description: The title of the milestone.
                    example: Milestone 1
                  description:
                    type: string
                    description: A detailed description of the milestone.
                    example: This is the first milestone.
                  deadline:
                    type: string
                    format: date-time
                    description: The deadline for the milestone in GMT format.
                    example: Tue, 19 Nov 2024 16:23:17 GMT
                  created_at:
                    type: string
                    format: date-time
                    description: The timestamp when the milestone was created.
                    example: Tue, 19 Nov 2024 16:23:17 GMT
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        task_id:
                          type: integer
                          description: The ID of the task.
                          example: 1
                        description:
                          type: string
                          description: The task description.
                          example: Task 1 description
                        is_completed:
                          type: boolean
                          description: Indicates whether the task has been completed.
                          example: true
                        feedback:
                          type: string
                          description: Feedback provided for the task (if any).
                          example: Great work!
                        feedback_time:
                          type: string
                          format: date-time
                          description: The time the feedback was provided (if any).
                          example: Tue, 19 Nov 2024 16:23:17 GMT
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Milestone or team not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 404
                response:
                  errors:
                    - Milestone or team not found.
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Submit milestone documents for a specific milestone
      description: Allows a student to upload and submit PDF files for tasks under a specific milestone on behalf of their team. Each file corresponds to a task.
      security:
        - authToken: []
      tags:
        - Student_Milestone_Info
      parameters:
        - in: path
          name: milestone_id
          required: true
          description: The ID of the milestone to submit documents for.
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              additionalProperties:
                type: string
                format: binary
                description: File upload field where property name is a numeric identifier
            example:
                10 : Milestone 4 Report_API Development and Integration.pdf
                11 : Milestone 5 Report_final_Testing.pdf
      responses:
        '201':
          description: Documents for the milestone were successfully submitted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Milestone documents submitted successfully
        '400':
          description: Bad request. Issues with file type, task validity, or milestone deadline.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              examples:
                task_or_pdf_invalid:
                  value:
                    meta:
                      code: 400
                    response:
                      errors:
                        - Task 1 is not valid for this milestone or the file is not a PDF
                deadline_passed:
                  value:
                    meta:
                      code: 400
                    response:
                      errors:
                        - Cannot submit after the milestone deadline
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Milestone or team not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              example:
                meta:
                  code: 404
                response:
                  errors:
                    - Milestone or team not found
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /student/download_submission/{task_id}:
    get:
      summary: Download submission document for a task
      description: Allows a student to download their team's submitted document for a specific task.
      security:
        - authToken: []
      tags:
        - Student_Milestone_Info
      parameters:
        - in: path
          name: task_id
          required: true
          description: The ID of the task to download the submission for.
          schema:
            type: integer
            example: 5
      responses:
        '200':
          description: File successfully downloaded.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Submission or file not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GenericError/content/application~1json/schema'
              examples:
                submission_or_doc_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - Submission or document not found
                file_not_found:
                  value:
                    meta:
                      code: 404
                    response:
                      errors:
                        - File not found
        '500':
          $ref: '#/components/responses/InternalServerError'